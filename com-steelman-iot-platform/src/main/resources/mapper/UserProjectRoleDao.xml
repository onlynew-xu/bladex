<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelman.iot.platform.dao.UserProjectRoleDao">
    <resultMap id="BaseResultMap" type="com.steelman.iot.platform.entity.UserProjectRole">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="user_id"  property="userId"/>
        <result column="project_id"  property="projectId"/>
        <result column="role_id"  property="roleId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        ,
        user_id,
        project_id,
        role_id,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user_project_role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sys_user_project_role
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.entity.UserProjectRole"
            useGeneratedKeys="true">
        insert into sys_user_project_role (user_id, project_id, role_id,
                                           create_time, update_time)
        values (#{userId}, #{projectId}, #{roleId},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.steelman.iot.platform.entity.UserProjectRole" useGeneratedKeys="true">
        insert into sys_user_project_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="projectId != null">
                #{projectId},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.steelman.iot.platform.entity.UserProjectRole">
        update sys_user_project_role
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.steelman.iot.platform.entity.UserProjectRole">
        update sys_user_project_role
        set user_id     = #{userId},
            project_id  = #{projectId},
            role_id     = #{roleId},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findByUserIdAndProjectId" resultType="com.steelman.iot.platform.entity.dto.UserProjectRoleDto">
        SELECT upr.id          as id,
               upr.user_id     as userId,
               upr.project_id  as projectId,
               upr.role_id     as roleId,
               upr.create_time as createTime,
               upr.update_time as updateTime,
               r.name          as roleName,
               r.definition    as roleDefinition,
               p.name          as projectName
        FROM sys_user_project_role upr
                 INNER JOIN sys_role r ON upr.role_id = r.id
                 INNER JOIN iot_project p ON p.id = upr.project_id
        WHERE upr.user_id = #{userId}
          AND upr.project_id = #{projectId}
    </select>
    <select id="findDtoByUserId" resultType="com.steelman.iot.platform.entity.dto.UserProjectRoleDto">
        SELECT upr.id          as id,
               upr.user_id     as userId,
               upr.project_id  as projectId,
               upr.role_id     as roleId,
               upr.create_time as createTime,
               upr.update_time as updateTime,
               r.name          as roleName,
               r.definition    as roleDefinition,
               p.name          as projectName
        FROM sys_user_project_role upr
                 INNER JOIN sys_role r ON upr.role_id = r.id
                 INNER JOIN iot_project p ON p.id = upr.project_id
        WHERE upr.user_id = #{userId}
    </select>
    <update id="updateUserProjectRole">
        UPDATE sys_user_project_role
        SET role_id     = #{roleId},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id=#{id}
    </update>
    <select id="getSuperAdmin" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"></include>
        FROM sys_user_project_role
        WHERE project_id=#{projectId} AND role_id=1
    </select>
    <select id="findDtoByProjectId" resultType="com.steelman.iot.platform.entity.dto.UserProjectRoleDto">
        SELECT upr.id          as id,
               upr.user_id     as userId,
               upr.project_id  as projectId,
               upr.role_id     as roleId,
               upr.create_time as createTime,
               upr.update_time as updateTime,
               r.name          as roleName,
               r.definition    as roleDefinition,
               p.name          as projectName
        FROM sys_user_project_role upr
                 INNER JOIN sys_role r ON upr.role_id = r.id
                 INNER JOIN iot_project p ON p.id = upr.project_id
        WHERE upr.project_id = #{projectId}
    </select>


    <select id="findUserNameByProjectId" resultType="java.lang.String">
        select b.username
        from sys_user_project_role a
                 inner join sys_user b on a.user_id = b.id
        where a.project_id = #{projectId}
          and a.role_id !=6
    </select>
</mapper>