<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelman.iot.platform.energyManager.dao.DeviceHourDataSmartSuperDao">
  <resultMap id="BaseResultMap" type="com.steelman.iot.platform.energyManager.entity.DeviceHourDataSmartSuper">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="serial_num" jdbcType="VARCHAR" property="serialNum" />
    <result column="volt_phase_angle_a" jdbcType="VARCHAR" property="voltPhaseAngleA" />
    <result column="volt_phase_angle_b" jdbcType="VARCHAR" property="voltPhaseAngleB" />
    <result column="volt_phase_angle_c" jdbcType="VARCHAR" property="voltPhaseAngleC" />
    <result column="amp_phase_angle_a" jdbcType="VARCHAR" property="ampPhaseAngleA" />
    <result column="amp_phase_angle_b" jdbcType="VARCHAR" property="ampPhaseAngleB" />
    <result column="amp_phase_angle_c" jdbcType="VARCHAR" property="ampPhaseAngleC" />
    <result column="volt_rms_a" jdbcType="VARCHAR" property="voltRmsA" />
    <result column="volt_rms_b" jdbcType="VARCHAR" property="voltRmsB" />
    <result column="volt_rms_c" jdbcType="VARCHAR" property="voltRmsC" />
    <result column="amp_rms_a" jdbcType="VARCHAR" property="ampRmsA" />
    <result column="amp_rms_b" jdbcType="VARCHAR" property="ampRmsB" />
    <result column="amp_rms_c" jdbcType="VARCHAR" property="ampRmsC" />
    <result column="leaked" jdbcType="VARCHAR" property="leaked" />
    <result column="temp1" jdbcType="VARCHAR" property="temp1" />
    <result column="temp2" jdbcType="VARCHAR" property="temp2" />
    <result column="temp3" jdbcType="VARCHAR" property="temp3" />
    <result column="temp4" jdbcType="VARCHAR" property="temp4" />
    <result column="current_unbalance" jdbcType="VARCHAR" property="currentUnbalance" />
    <result column="voltage_unbalance" jdbcType="VARCHAR" property="voltageUnbalance" />
    <result column="active_power_a" jdbcType="VARCHAR" property="activePowerA" />
    <result column="active_power_b" jdbcType="VARCHAR" property="activePowerB" />
    <result column="active_power_c" jdbcType="VARCHAR" property="activePowerC" />
    <result column="reactive_power_a" jdbcType="VARCHAR" property="reactivePowerA" />
    <result column="reactive_power_b" jdbcType="VARCHAR" property="reactivePowerB" />
    <result column="reactive_power_c" jdbcType="VARCHAR" property="reactivePowerC" />
    <result column="apparent_power_a" jdbcType="VARCHAR" property="apparentPowerA" />
    <result column="apparent_power_b" jdbcType="VARCHAR" property="apparentPowerB" />
    <result column="apparent_power_c" jdbcType="VARCHAR" property="apparentPowerC" />
    <result column="power_factor_a" jdbcType="VARCHAR" property="powerFactorA" />
    <result column="power_factor_b" jdbcType="VARCHAR" property="powerFactorB" />
    <result column="power_factor_c" jdbcType="VARCHAR" property="powerFactorC" />
    <result column="line_freq" jdbcType="VARCHAR" property="lineFreq" />
    <result column="thdi_a" jdbcType="VARCHAR" property="thdiA" />
    <result column="thdi_b" jdbcType="VARCHAR" property="thdiB" />
    <result column="thdi_c" jdbcType="VARCHAR" property="thdiC" />
    <result column="thdv_a" jdbcType="VARCHAR" property="thdvA" />
    <result column="thdv_b" jdbcType="VARCHAR" property="thdvB" />
    <result column="thdv_c" jdbcType="VARCHAR" property="thdvC" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="month" jdbcType="VARCHAR" property="month" />
    <result column="day" jdbcType="VARCHAR" property="day" />
    <result column="year_month_day" jdbcType="VARCHAR" property="yearMonthDay" />
    <result column="date_time_now" jdbcType="VARCHAR" property="dateTimeNow" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, device_id, serial_num, volt_phase_angle_a, volt_phase_angle_b, volt_phase_angle_c, 
    amp_phase_angle_a, amp_phase_angle_b, amp_phase_angle_c, volt_rms_a, volt_rms_b, 
    volt_rms_c, amp_rms_a, amp_rms_b, amp_rms_c, leaked, temp1, temp2, temp3, temp4, 
    current_unbalance, voltage_unbalance, active_power_a, active_power_b, active_power_c, 
    reactive_power_a, reactive_power_b, reactive_power_c, apparent_power_a, apparent_power_b, 
    apparent_power_c, power_factor_a, power_factor_b, power_factor_c, line_freq, thdi_a, 
    thdi_b, thdi_c, thdv_a, thdv_b, thdv_c, `year`, `month`, `day`, year_month_day, date_time_now, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from iot_device_hour_data_smart_super
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from iot_device_hour_data_smart_super
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.energyManager.entity.DeviceHourDataSmartSuper" useGeneratedKeys="true">
    insert into iot_device_hour_data_smart_super (device_id, serial_num, volt_phase_angle_a, 
      volt_phase_angle_b, volt_phase_angle_c, amp_phase_angle_a, 
      amp_phase_angle_b, amp_phase_angle_c, volt_rms_a, 
      volt_rms_b, volt_rms_c, amp_rms_a, 
      amp_rms_b, amp_rms_c, leaked, 
      temp1, temp2, temp3, 
      temp4, current_unbalance, voltage_unbalance, 
      active_power_a, active_power_b, active_power_c, 
      reactive_power_a, reactive_power_b, reactive_power_c, 
      apparent_power_a, apparent_power_b, apparent_power_c, 
      power_factor_a, power_factor_b, power_factor_c, 
      line_freq, thdi_a, thdi_b, 
      thdi_c, thdv_a, thdv_b, 
      thdv_c, `year`, `month`, 
      `day`, year_month_day, date_time_now, 
      create_time)
    values (#{deviceId,jdbcType=BIGINT}, #{serialNum,jdbcType=VARCHAR}, #{voltPhaseAngleA,jdbcType=VARCHAR}, 
      #{voltPhaseAngleB,jdbcType=VARCHAR}, #{voltPhaseAngleC,jdbcType=VARCHAR}, #{ampPhaseAngleA,jdbcType=VARCHAR}, 
      #{ampPhaseAngleB,jdbcType=VARCHAR}, #{ampPhaseAngleC,jdbcType=VARCHAR}, #{voltRmsA,jdbcType=VARCHAR}, 
      #{voltRmsB,jdbcType=VARCHAR}, #{voltRmsC,jdbcType=VARCHAR}, #{ampRmsA,jdbcType=VARCHAR}, 
      #{ampRmsB,jdbcType=VARCHAR}, #{ampRmsC,jdbcType=VARCHAR}, #{leaked,jdbcType=VARCHAR}, 
      #{temp1,jdbcType=VARCHAR}, #{temp2,jdbcType=VARCHAR}, #{temp3,jdbcType=VARCHAR}, 
      #{temp4,jdbcType=VARCHAR}, #{currentUnbalance,jdbcType=VARCHAR}, #{voltageUnbalance,jdbcType=VARCHAR}, 
      #{activePowerA,jdbcType=VARCHAR}, #{activePowerB,jdbcType=VARCHAR}, #{activePowerC,jdbcType=VARCHAR}, 
      #{reactivePowerA,jdbcType=VARCHAR}, #{reactivePowerB,jdbcType=VARCHAR}, #{reactivePowerC,jdbcType=VARCHAR}, 
      #{apparentPowerA,jdbcType=VARCHAR}, #{apparentPowerB,jdbcType=VARCHAR}, #{apparentPowerC,jdbcType=VARCHAR}, 
      #{powerFactorA,jdbcType=VARCHAR}, #{powerFactorB,jdbcType=VARCHAR}, #{powerFactorC,jdbcType=VARCHAR}, 
      #{lineFreq,jdbcType=VARCHAR}, #{thdiA,jdbcType=VARCHAR}, #{thdiB,jdbcType=VARCHAR}, 
      #{thdiC,jdbcType=VARCHAR}, #{thdvA,jdbcType=VARCHAR}, #{thdvB,jdbcType=VARCHAR}, 
      #{thdvC,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, #{month,jdbcType=VARCHAR}, 
      #{day,jdbcType=VARCHAR}, #{yearMonthDay,jdbcType=VARCHAR}, #{dateTimeNow,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.energyManager.entity.DeviceHourDataSmartSuper" useGeneratedKeys="true">
    insert into iot_device_hour_data_smart_super
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="serialNum != null">
        serial_num,
      </if>
      <if test="voltPhaseAngleA != null">
        volt_phase_angle_a,
      </if>
      <if test="voltPhaseAngleB != null">
        volt_phase_angle_b,
      </if>
      <if test="voltPhaseAngleC != null">
        volt_phase_angle_c,
      </if>
      <if test="ampPhaseAngleA != null">
        amp_phase_angle_a,
      </if>
      <if test="ampPhaseAngleB != null">
        amp_phase_angle_b,
      </if>
      <if test="ampPhaseAngleC != null">
        amp_phase_angle_c,
      </if>
      <if test="voltRmsA != null">
        volt_rms_a,
      </if>
      <if test="voltRmsB != null">
        volt_rms_b,
      </if>
      <if test="voltRmsC != null">
        volt_rms_c,
      </if>
      <if test="ampRmsA != null">
        amp_rms_a,
      </if>
      <if test="ampRmsB != null">
        amp_rms_b,
      </if>
      <if test="ampRmsC != null">
        amp_rms_c,
      </if>
      <if test="leaked != null">
        leaked,
      </if>
      <if test="temp1 != null">
        temp1,
      </if>
      <if test="temp2 != null">
        temp2,
      </if>
      <if test="temp3 != null">
        temp3,
      </if>
      <if test="temp4 != null">
        temp4,
      </if>
      <if test="currentUnbalance != null">
        current_unbalance,
      </if>
      <if test="voltageUnbalance != null">
        voltage_unbalance,
      </if>
      <if test="activePowerA != null">
        active_power_a,
      </if>
      <if test="activePowerB != null">
        active_power_b,
      </if>
      <if test="activePowerC != null">
        active_power_c,
      </if>
      <if test="reactivePowerA != null">
        reactive_power_a,
      </if>
      <if test="reactivePowerB != null">
        reactive_power_b,
      </if>
      <if test="reactivePowerC != null">
        reactive_power_c,
      </if>
      <if test="apparentPowerA != null">
        apparent_power_a,
      </if>
      <if test="apparentPowerB != null">
        apparent_power_b,
      </if>
      <if test="apparentPowerC != null">
        apparent_power_c,
      </if>
      <if test="powerFactorA != null">
        power_factor_a,
      </if>
      <if test="powerFactorB != null">
        power_factor_b,
      </if>
      <if test="powerFactorC != null">
        power_factor_c,
      </if>
      <if test="lineFreq != null">
        line_freq,
      </if>
      <if test="thdiA != null">
        thdi_a,
      </if>
      <if test="thdiB != null">
        thdi_b,
      </if>
      <if test="thdiC != null">
        thdi_c,
      </if>
      <if test="thdvA != null">
        thdv_a,
      </if>
      <if test="thdvB != null">
        thdv_b,
      </if>
      <if test="thdvC != null">
        thdv_c,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="month != null">
        `month`,
      </if>
      <if test="day != null">
        `day`,
      </if>
      <if test="yearMonthDay != null">
        year_month_day,
      </if>
      <if test="dateTimeNow != null">
        date_time_now,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleA != null">
        #{voltPhaseAngleA,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleB != null">
        #{voltPhaseAngleB,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleC != null">
        #{voltPhaseAngleC,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleA != null">
        #{ampPhaseAngleA,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleB != null">
        #{ampPhaseAngleB,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleC != null">
        #{ampPhaseAngleC,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsA != null">
        #{voltRmsA,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsB != null">
        #{voltRmsB,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsC != null">
        #{voltRmsC,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsA != null">
        #{ampRmsA,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsB != null">
        #{ampRmsB,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsC != null">
        #{ampRmsC,jdbcType=VARCHAR},
      </if>
      <if test="leaked != null">
        #{leaked,jdbcType=VARCHAR},
      </if>
      <if test="temp1 != null">
        #{temp1,jdbcType=VARCHAR},
      </if>
      <if test="temp2 != null">
        #{temp2,jdbcType=VARCHAR},
      </if>
      <if test="temp3 != null">
        #{temp3,jdbcType=VARCHAR},
      </if>
      <if test="temp4 != null">
        #{temp4,jdbcType=VARCHAR},
      </if>
      <if test="currentUnbalance != null">
        #{currentUnbalance,jdbcType=VARCHAR},
      </if>
      <if test="voltageUnbalance != null">
        #{voltageUnbalance,jdbcType=VARCHAR},
      </if>
      <if test="activePowerA != null">
        #{activePowerA,jdbcType=VARCHAR},
      </if>
      <if test="activePowerB != null">
        #{activePowerB,jdbcType=VARCHAR},
      </if>
      <if test="activePowerC != null">
        #{activePowerC,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerA != null">
        #{reactivePowerA,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerB != null">
        #{reactivePowerB,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerC != null">
        #{reactivePowerC,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerA != null">
        #{apparentPowerA,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerB != null">
        #{apparentPowerB,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerC != null">
        #{apparentPowerC,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorA != null">
        #{powerFactorA,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorB != null">
        #{powerFactorB,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorC != null">
        #{powerFactorC,jdbcType=VARCHAR},
      </if>
      <if test="lineFreq != null">
        #{lineFreq,jdbcType=VARCHAR},
      </if>
      <if test="thdiA != null">
        #{thdiA,jdbcType=VARCHAR},
      </if>
      <if test="thdiB != null">
        #{thdiB,jdbcType=VARCHAR},
      </if>
      <if test="thdiC != null">
        #{thdiC,jdbcType=VARCHAR},
      </if>
      <if test="thdvA != null">
        #{thdvA,jdbcType=VARCHAR},
      </if>
      <if test="thdvB != null">
        #{thdvB,jdbcType=VARCHAR},
      </if>
      <if test="thdvC != null">
        #{thdvC,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="day != null">
        #{day,jdbcType=VARCHAR},
      </if>
      <if test="yearMonthDay != null">
        #{yearMonthDay,jdbcType=VARCHAR},
      </if>
      <if test="dateTimeNow != null">
        #{dateTimeNow,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.steelman.iot.platform.energyManager.entity.DeviceHourDataSmartSuper">
    update iot_device_hour_data_smart_super
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="serialNum != null">
        serial_num = #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleA != null">
        volt_phase_angle_a = #{voltPhaseAngleA,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleB != null">
        volt_phase_angle_b = #{voltPhaseAngleB,jdbcType=VARCHAR},
      </if>
      <if test="voltPhaseAngleC != null">
        volt_phase_angle_c = #{voltPhaseAngleC,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleA != null">
        amp_phase_angle_a = #{ampPhaseAngleA,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleB != null">
        amp_phase_angle_b = #{ampPhaseAngleB,jdbcType=VARCHAR},
      </if>
      <if test="ampPhaseAngleC != null">
        amp_phase_angle_c = #{ampPhaseAngleC,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsA != null">
        volt_rms_a = #{voltRmsA,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsB != null">
        volt_rms_b = #{voltRmsB,jdbcType=VARCHAR},
      </if>
      <if test="voltRmsC != null">
        volt_rms_c = #{voltRmsC,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsA != null">
        amp_rms_a = #{ampRmsA,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsB != null">
        amp_rms_b = #{ampRmsB,jdbcType=VARCHAR},
      </if>
      <if test="ampRmsC != null">
        amp_rms_c = #{ampRmsC,jdbcType=VARCHAR},
      </if>
      <if test="leaked != null">
        leaked = #{leaked,jdbcType=VARCHAR},
      </if>
      <if test="temp1 != null">
        temp1 = #{temp1,jdbcType=VARCHAR},
      </if>
      <if test="temp2 != null">
        temp2 = #{temp2,jdbcType=VARCHAR},
      </if>
      <if test="temp3 != null">
        temp3 = #{temp3,jdbcType=VARCHAR},
      </if>
      <if test="temp4 != null">
        temp4 = #{temp4,jdbcType=VARCHAR},
      </if>
      <if test="currentUnbalance != null">
        current_unbalance = #{currentUnbalance,jdbcType=VARCHAR},
      </if>
      <if test="voltageUnbalance != null">
        voltage_unbalance = #{voltageUnbalance,jdbcType=VARCHAR},
      </if>
      <if test="activePowerA != null">
        active_power_a = #{activePowerA,jdbcType=VARCHAR},
      </if>
      <if test="activePowerB != null">
        active_power_b = #{activePowerB,jdbcType=VARCHAR},
      </if>
      <if test="activePowerC != null">
        active_power_c = #{activePowerC,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerA != null">
        reactive_power_a = #{reactivePowerA,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerB != null">
        reactive_power_b = #{reactivePowerB,jdbcType=VARCHAR},
      </if>
      <if test="reactivePowerC != null">
        reactive_power_c = #{reactivePowerC,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerA != null">
        apparent_power_a = #{apparentPowerA,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerB != null">
        apparent_power_b = #{apparentPowerB,jdbcType=VARCHAR},
      </if>
      <if test="apparentPowerC != null">
        apparent_power_c = #{apparentPowerC,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorA != null">
        power_factor_a = #{powerFactorA,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorB != null">
        power_factor_b = #{powerFactorB,jdbcType=VARCHAR},
      </if>
      <if test="powerFactorC != null">
        power_factor_c = #{powerFactorC,jdbcType=VARCHAR},
      </if>
      <if test="lineFreq != null">
        line_freq = #{lineFreq,jdbcType=VARCHAR},
      </if>
      <if test="thdiA != null">
        thdi_a = #{thdiA,jdbcType=VARCHAR},
      </if>
      <if test="thdiB != null">
        thdi_b = #{thdiB,jdbcType=VARCHAR},
      </if>
      <if test="thdiC != null">
        thdi_c = #{thdiC,jdbcType=VARCHAR},
      </if>
      <if test="thdvA != null">
        thdv_a = #{thdvA,jdbcType=VARCHAR},
      </if>
      <if test="thdvB != null">
        thdv_b = #{thdvB,jdbcType=VARCHAR},
      </if>
      <if test="thdvC != null">
        thdv_c = #{thdvC,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=VARCHAR},
      </if>
      <if test="month != null">
        `month` = #{month,jdbcType=VARCHAR},
      </if>
      <if test="day != null">
        `day` = #{day,jdbcType=VARCHAR},
      </if>
      <if test="yearMonthDay != null">
        year_month_day = #{yearMonthDay,jdbcType=VARCHAR},
      </if>
      <if test="dateTimeNow != null">
        date_time_now = #{dateTimeNow,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.steelman.iot.platform.energyManager.entity.DeviceHourDataSmartSuper">
    update iot_device_hour_data_smart_super
    set device_id = #{deviceId,jdbcType=BIGINT},
      serial_num = #{serialNum,jdbcType=VARCHAR},
      volt_phase_angle_a = #{voltPhaseAngleA,jdbcType=VARCHAR},
      volt_phase_angle_b = #{voltPhaseAngleB,jdbcType=VARCHAR},
      volt_phase_angle_c = #{voltPhaseAngleC,jdbcType=VARCHAR},
      amp_phase_angle_a = #{ampPhaseAngleA,jdbcType=VARCHAR},
      amp_phase_angle_b = #{ampPhaseAngleB,jdbcType=VARCHAR},
      amp_phase_angle_c = #{ampPhaseAngleC,jdbcType=VARCHAR},
      volt_rms_a = #{voltRmsA,jdbcType=VARCHAR},
      volt_rms_b = #{voltRmsB,jdbcType=VARCHAR},
      volt_rms_c = #{voltRmsC,jdbcType=VARCHAR},
      amp_rms_a = #{ampRmsA,jdbcType=VARCHAR},
      amp_rms_b = #{ampRmsB,jdbcType=VARCHAR},
      amp_rms_c = #{ampRmsC,jdbcType=VARCHAR},
      leaked = #{leaked,jdbcType=VARCHAR},
      temp1 = #{temp1,jdbcType=VARCHAR},
      temp2 = #{temp2,jdbcType=VARCHAR},
      temp3 = #{temp3,jdbcType=VARCHAR},
      temp4 = #{temp4,jdbcType=VARCHAR},
      current_unbalance = #{currentUnbalance,jdbcType=VARCHAR},
      voltage_unbalance = #{voltageUnbalance,jdbcType=VARCHAR},
      active_power_a = #{activePowerA,jdbcType=VARCHAR},
      active_power_b = #{activePowerB,jdbcType=VARCHAR},
      active_power_c = #{activePowerC,jdbcType=VARCHAR},
      reactive_power_a = #{reactivePowerA,jdbcType=VARCHAR},
      reactive_power_b = #{reactivePowerB,jdbcType=VARCHAR},
      reactive_power_c = #{reactivePowerC,jdbcType=VARCHAR},
      apparent_power_a = #{apparentPowerA,jdbcType=VARCHAR},
      apparent_power_b = #{apparentPowerB,jdbcType=VARCHAR},
      apparent_power_c = #{apparentPowerC,jdbcType=VARCHAR},
      power_factor_a = #{powerFactorA,jdbcType=VARCHAR},
      power_factor_b = #{powerFactorB,jdbcType=VARCHAR},
      power_factor_c = #{powerFactorC,jdbcType=VARCHAR},
      line_freq = #{lineFreq,jdbcType=VARCHAR},
      thdi_a = #{thdiA,jdbcType=VARCHAR},
      thdi_b = #{thdiB,jdbcType=VARCHAR},
      thdi_c = #{thdiC,jdbcType=VARCHAR},
      thdv_a = #{thdvA,jdbcType=VARCHAR},
      thdv_b = #{thdvB,jdbcType=VARCHAR},
      thdv_c = #{thdvC,jdbcType=VARCHAR},
      `year` = #{year,jdbcType=VARCHAR},
      `month` = #{month,jdbcType=VARCHAR},
      `day` = #{day,jdbcType=VARCHAR},
      year_month_day = #{yearMonthDay,jdbcType=VARCHAR},
      date_time_now = #{dateTimeNow,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getDayData" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM iot_device_hour_data_smart_super
    WHERE device_id=#{deviceId} AND year_month_day=#{yearMonthDay}
  </select>
</mapper>