<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelman.iot.platform.dao.EnergyEquipmentDeviceDao">
    <resultMap id="BaseResultMap" type="com.steelman.iot.platform.entity.EnergyEquipmentDevice">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="equipment_id" jdbcType="BIGINT" property="equipmentId"/>
        <result column="device_type_id" jdbcType="BIGINT" property="deviceTypeId"/>
        <result column="device_id" jdbcType="BIGINT" property="deviceId"/>
        <result column="system_id" jdbcType="BIGINT" property="systemId"/>
        <result column="project_id" jdbcType="BIGINT" property="projectId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        ,
        equipment_id,
        device_type_id,
        device_id,
        system_id,
        project_id,
        create_time,
        update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from iot_energy_equipment_device
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByEquipmentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from iot_energy_equipment_device where equipment_id = #{equipmentId}
    </select>

    <select id="selectMonthYearConsumeRank" resultType="com.steelman.iot.platform.entity.vo.EnergyDeviceInfo">
        select a.name
        b.name as consumeTypeName,
        c.name as energyTypeName,
        d.totalData
        from iot_energy_equipment a
        inner join iot_energy_consume_type b on a.consume_type_id = b.id
        inner join iot_energy_type c on a.energy_type_id = c.id
        left join (select ifnull(sum(convert(e.total_total, decimal (13, 3))), 0) as totalData,
        a.equipment_id
        from iot_energy_equipment_device a
        inner join iot_device_measurement e on a.device_id = e.device_id
        where e.day_last_min = 1
        and project_id = #{projectId} and `year` = #{year}
        <if test="type ==1">
            and `month` = #{month}
        </if>
        group by a.equipment_id) d on a.id = d.equipment_id
        where a.project_id = #{projectId}
        order by d.totalData desc
    </select>

    <select id="selectQuarterConsumeRank"
            resultType="com.steelman.iot.platform.entity.vo.EnergyDeviceInfo">
        select a.name
               b.name as consumeTypeName,
               c.name as energyTypeName,
               d.totalData
        from iot_energy_equipment a
                 inner join iot_energy_consume_type b on a.consume_type_id = b.id
                 inner join iot_energy_type c on a.energy_type_id = c.id
                 left join (select ifnull(sum(convert(e.total_total, decimal (13, 3))), 0) as totalData,
                                   a.equipment_id
                            from iot_energy_equipment_device a
                                     inner join iot_device_measurement e on a.device_id = e.device_id
                            where e.day_last_min = 1
                              and project_id = #{projectId}
                              and `year` = #{year}
                              and `month` between #{startMonth} and #{endMonth}
                            group by a.equipment_id) d on a.id = d.equipment_id
        where a.project_id = #{projectId}
        order by d.totalData desc
    </select>
    <select id="selectCountCenter" resultType="com.steelman.iot.platform.entity.vo.EnergyDeviceInfo">
        select a.name ,
        b.name as consumeTypeName,
        c.name as energyTypeName,
        d.totalData,
        a.location
        from iot_energy_equipment a
        inner join iot_energy_consume_type b on a.consume_type_id = b.id
        inner join iot_energy_type c on a.energy_type_id = c.id
        inner join (select case
        when #{type} = 1
        then ifnull(sum(convert(e.day_total, decimal (13, 3))), 0)
        when #{type} = 2
        then 0.000
        when #{type} = 3
        then ifnull(sum(convert(e.day_peak, decimal (13, 3))), 0)
        when #{type} = 4
        then ifnull(sum(convert(e.day_normal, decimal (13, 3))), 0)
        else ifnull(sum(convert(e.day_valley, decimal (13, 3))), 0) end as totalData,
        a.equipment_id
        from iot_energy_equipment_device a
        inner join iot_device_measurement e on a.device_id = e.device_id
        where e.day_last_min = 1
        and project_id = #{projectId}
        <if test="beginTime !=null and beginTime !=''">
            and date_format(e.create_time,'%Y-%m-%d') between #{beginTime} and #{endTime}
        </if>
        group by a.equipment_id) d on a.id = d.equipment_id
        where a.project_id = #{projectId}
        <if test="consumeTypeId !=null">
            and a.consume_type_id = #{consumeTypeId}
        </if>
        <if test="energyTypeId !=null">
            and a.energy_type_id = #{energyTypeId}
        </if>
        <choose>
            <when test="order ==1">
                order by d.totalData desc
            </when>
            <otherwise>
                order by d.totalData asc
            </otherwise>
        </choose>
    </select>
    <select id="selectCountCenterReading" resultType="com.steelman.iot.platform.entity.vo.EnergyDeviceInfo">
        select
        a.id,
        b.name,
        c.name as consumeTypeName,
        d.name as energyTypeName,
        (select
        case when #{type} =1 then ifnull(e.day_total,0)
        when #{type} =2 then 0
        when #{type} =3 then ifnull(e.day_peak, 0)
        when #{type} =4 then ifnull(e.day_normal,0)
        else ifnull(e.day_valley) end as totalData
        from iot_device_measurement e where e.device_id = a.device_id order by e.create_time desc limit 0,1 ) as totalData
        from iot_energy_equipment_device a
        inner join iot_energy_equipment b on a.equipment_id = b.id
        inner join iot_energy_consume_type c on b.consume_type_id = c.id
        inner join iot_energy_type d on d.id = b.energy_type_id
        where a.project_id = 1
        <choose>
            <when test="order ==1">
                order by totalData desc
            </when>
            <otherwise>
                order by totalData asc
            </otherwise>
        </choose>
    </select>

    <select id="selectDeviceCountMeasurement" resultType="java.util.Map">
        select ifnull(sum(convert(b.total_peak, decimal (13, 3))), 0)   as totalPeak,
               ifnull(sum(convert(b.total_normal, decimal (13, 3))), 0) as totalNormal,
               ifnull(sum(convert(b.total_valley, decimal (13, 3))), 0) as totalValley,
               ifnull(sum(convert(b.total_total, decimal (13, 3))), 0)  as totalTotal,
               0.000                                                    as totalSpike
        from iot_energy_equipment_device a
                 inner join iot_device_measurement b on a.device_id = b.device_id
        where a.equipment_id = #{equipmentId}
          and b.day_last_min = 1
    </select>

    <select id="selectDeviceMeasurementDay" resultType="java.lang.String">
        select
            case
                when #{type} = 1
                    then ifnull(sum(convert(b.total_total, decimal (13, 3))), 0)
                when #{type} = 2
                    then 0.000
                when #{type} = 3
                    then ifnull(sum(convert(b.total_peak, decimal (13, 3))), 0)
                when #{type} = 4
                    then ifnull(sum(convert(b.total_normal, decimal (13, 3))), 0)
                else ifnull(sum(convert(b.total_valley, decimal (13, 3))), 0) end as totalData
        from iot_energy_equipment_device a
                 inner join iot_device_measurement b on a.device_id = b.device_id
        where a.equipment_id = #{equipmentId}
          and b.day_last_min = 1
          and date_format(b.create_time, '%Y-%m-%d') = #{dateStr}

    </select>
    <select id="selectByDeviceId" resultType="com.steelman.iot.platform.entity.EnergyEquipmentPower">
        select b.* from iot_energy_equipment_device a left join iot_energy_equipment_power b on a.equipment_id = b.equipment_id  where device_id = #{deviceId}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from iot_energy_equipment_device
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.steelman.iot.platform.entity.EnergyEquipmentDevice" useGeneratedKeys="true">
        insert into iot_energy_equipment_device (equipment_id, device_type_id, device_id,
                                                 system_id, project_id, create_time,
                                                 update_time)
        values (#{equipmentId,jdbcType=BIGINT}, #{deviceTypeId,jdbcType=BIGINT}, #{deviceId,jdbcType=BIGINT},
                #{systemId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.steelman.iot.platform.entity.EnergyEquipmentDevice" useGeneratedKeys="true">
        insert into iot_energy_equipment_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">
                equipment_id,
            </if>
            <if test="deviceTypeId != null">
                device_type_id,
            </if>
            <if test="deviceId != null">
                device_id,
            </if>
            <if test="systemId != null">
                system_id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">
                #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="deviceTypeId != null">
                #{deviceTypeId,jdbcType=BIGINT},
            </if>
            <if test="deviceId != null">
                #{deviceId,jdbcType=BIGINT},
            </if>
            <if test="systemId != null">
                #{systemId,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.steelman.iot.platform.entity.EnergyEquipmentDevice">
        update iot_energy_equipment_device
        <set>
            <if test="equipmentId != null">
                equipment_id = #{equipmentId,jdbcType=BIGINT},
            </if>
            <if test="deviceTypeId != null">
                device_type_id = #{deviceTypeId,jdbcType=BIGINT},
            </if>
            <if test="deviceId != null">
                device_id = #{deviceId,jdbcType=BIGINT},
            </if>
            <if test="systemId != null">
                system_id = #{systemId,jdbcType=BIGINT},
            </if>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.steelman.iot.platform.entity.EnergyEquipmentDevice">
        update iot_energy_equipment_device
        set equipment_id   = #{equipmentId,jdbcType=BIGINT},
            device_type_id = #{deviceTypeId,jdbcType=BIGINT},
            device_id      = #{deviceId,jdbcType=BIGINT},
            system_id      = #{systemId,jdbcType=BIGINT},
            project_id     = #{projectId,jdbcType=BIGINT},
            create_time    = #{createTime,jdbcType=TIMESTAMP},
            update_time    = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <delete id="deleteByDeviceId">
        DELETE FROM iot_energy_equipment_device
        WHERE device_id=#{deviceId}
    </delete>
    <select id="getMonthMeasure" resultType="map">
        SELECT ee.id,ee.name,ee.location,ee.area_id as areaId,ee.building_id as buildingId, ee.storey_id as storeyId,ee.room_id as roomId,IFNULL(convert(dm.month_total, SIGNED),0) as monthConsume,b.name as energyName,c.name as consumeName
        FROM iot_energy_equipment ee
        inner join iot_energy_type b on b.id = ee.energy_type_id
        inner join iot_energy_consume_type c on ee.consume_type_id = c.id
        LEFT JOIN   iot_energy_equipment_device eed ON ee.id=eed.equipment_id AND eed.project_id=#{projectId}
        LEFT JOIN (SELECT MAX(me.id) as measure_id,me.device_id as device_id
                   FROM iot_device_measurement me
                   WHERE me.project_id=#{projectId} AND me.year_month_day=#{yearMonthDay}
                   GROUP BY me.device_id
            ) as mme ON eed.device_id=mme.device_id
        LEFT JOIN iot_device_measurement dm ON  dm.id=mme.measure_id
        WHERE ee.project_id=#{projectId}
    </select>
    <select id="getTodayMeasure" resultType="map">
        SELECT ee.id,ee.name,ee.location,ee.area_id as areaId,ee.building_id as buildingId, ee.storey_id as storeyId,ee.room_id as roomId,IFNULL(convert(dm.total_total, SIGNED),0) as total,b.name as energyName,c.name as consumeName
        FROM iot_energy_equipment ee
                 inner join iot_energy_type b on b.id = ee.energy_type_id
                 inner join iot_energy_consume_type c on ee.consume_type_id = c.id
                 LEFT JOIN   iot_energy_equipment_device eed ON ee.id=eed.equipment_id AND eed.project_id=#{projectId}
                 LEFT JOIN (SELECT MAX(me.id) as measure_id,me.device_id as device_id
                            FROM iot_device_measurement me
                            WHERE me.project_id=#{projectId} AND  me.year_month_day=#{yearMonthDay}
                            GROUP BY me.device_id
        ) as mme ON eed.device_id=mme.device_id
        LEFT JOIN iot_device_measurement dm ON  dm.id=mme.measure_id
        WHERE ee.project_id=#{projectId}
    </select>
    <select id="getJiDuMeasure" resultType="map">
        SELECT ee.id as id ,IFNULL(convert(dm.total_total, SIGNED),0) as total
        FROM iot_energy_equipment ee
        LEFT JOIN   iot_energy_equipment_device eed ON ee.id=eed.equipment_id AND eed.project_id=#{projectId}
        LEFT JOIN iot_device_last_measurement dm ON  dm.device_id=eed.device_id AND dm.project_id=#{projectId}
        WHERE ee.project_id=#{projectId} AND dm.year_month_day=#{dateYear}
    </select>

    <select id="selectEnergyEquipmentByDeviceId" resultType="com.steelman.iot.platform.entity.EnergyEquipment">
        select b.* from iot_energy_equipment_device a inner join iot_energy_equipment b on a.equipment_id = b.id
    </select>
    <select id="findByProjectId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"></include>
        FROM iot_energy_equipment_device
        WHERE project_id=#{projectId}
    </select>
    <delete id="deleteByEquipmentId">
        DELETE FROM iot_energy_equipment_device
        WHERE equipment_id=#{equipmentId}
    </delete>
</mapper>