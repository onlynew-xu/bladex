<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelman.iot.platform.dao.CompanyTypeDao">
  <resultMap id="BaseResultMap" type="com.steelman.iot.platform.entity.CompanyType">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, create_time, update_time
  </sql>

  <select id="selectByAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iot_company_type
    ORDER BY id desc limit #{page},#{size}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iot_company_type
    ORDER BY id
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from iot_company_type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from iot_company_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.entity.CompanyType" useGeneratedKeys="true">
    insert into iot_company_type (`name`, create_time, update_time
      )
    values (#{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.entity.CompanyType" useGeneratedKeys="true">
    insert into iot_company_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.steelman.iot.platform.entity.CompanyType">
    update iot_company_type
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.steelman.iot.platform.entity.CompanyType">
    update iot_company_type
    set `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByContact" parameterType="com.steelman.iot.platform.entity.Contact" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iot_contact
    where 1=1
    <if test="name != null">
      and `name` = #{name}
    </if>
    <if test="tel != null">
      and tel = #{tel}
    </if>
    <if test="address != null">
      and address = #{address}
    </if>
    <if test="email != null">
      and email = #{email}
    </if>
    <if test="mark != null">
      and mark = #{mark}
    </if>
    <if test="advice != null">
      and advice = #{advice}
    </if>
    <if test="companyId != null">
      and company_id = #{companyId}
    </if>
    <if test="company != null">
      and company = #{company}
    </if>
    <if test="dept != null">
      and dept = #{dept}
    </if>
    <if test="offer != null">
      and offer = #{offer}
    </if>
    <if test="projectId != null">
      and project_id = #{projectId}
    </if>
    <if test="createTime != null">
      and create_time = #{createTime}
    </if>
    <if test="updateTime != null">
      and update_time = #{updateTime}
    </if>
    order by id desc
  </select>
</mapper>