<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.steelman.iot.platform.dao.StoreyDao">
  <resultMap id="BaseResultMap" type="com.steelman.iot.platform.entity.Storey">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="cadPicture" jdbcType="VARCHAR" property="cadpicture" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, building_id, project_id, picture, cadPicture, create_time, update_time,area_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iot_region_storey
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from iot_region_storey
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByStorey" parameterType="com.steelman.iot.platform.entity.Storey">
    delete from iot_region_storey
    where 1=1
    <if test="areaId != null">
      and area_id= #{areaId,jdbcType=BIGINT}
    </if>
    <if test="buildingId != null">
      and building_id = #{buildingId,jdbcType=BIGINT}
    </if>
  </delete>

  <!--使用删除图片时候，只需要把图片设置未空-->
  <update id="deletePictureById" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id= #{areaId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id= #{projectId,jdbcType=BIGINT},
      </if>

        picture = null,

      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="deletePictureCadById" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id= #{areaId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id= #{projectId,jdbcType=BIGINT},
      </if>

      cadPicture = null,

      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>



  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.entity.Storey" useGeneratedKeys="true">
    insert into iot_region_storey (`name`, building_id, project_id,
      picture, cadPicture, create_time,
      update_time,area_id)
    values (#{name,jdbcType=VARCHAR}, #{buildingId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT},
      #{picture,jdbcType=VARCHAR}, #{cadpicture,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},#{areaId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.steelman.iot.platform.entity.Storey" useGeneratedKeys="true">
    insert into iot_region_storey
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="cadpicture != null">
        cadPicture,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="cadpicture != null">
        #{cadpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="cadpicture != null">
        cadPicture = #{cadpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="addFloorCenterPicture" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    <set>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="cadpicture != null">
        cadPicture = #{cadpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
    and building_id = #{buildingId,jdbcType=BIGINT}
    and project_id = #{projectId,jdbcType=BIGINT}
    and area_id = #{areaId,jdbcType=BIGINT}
  </update>

  <update id="insertFloorCenterPicture" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="cadpicture != null">
        cadPicture = #{cadpicture,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=BIGINT}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
        and area_id = #{areaId,jdbcType=BIGINT}
        and project_id = #{projectId,jdbcType=BIGINT}
        and building_id = #{buildingId,jdbcType=BIGINT}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.steelman.iot.platform.entity.Storey">
    update iot_region_storey
    set `name` = #{name,jdbcType=VARCHAR},
      building_id = #{buildingId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      picture = #{picture,jdbcType=VARCHAR},
      cadPicture = #{cadpicture,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByAll"  resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT CONCAT(a.`name`,"-",b.`name`) as contName,s.*
    from iot_region_storey s
    LEFT JOIN iot_region_building b on b.id=s.building_id
    LEFT JOIN iot_region_area a on a.id=b.area_id
    where 1=1
    <if test="buildingId != null and buildingId != '' ">
      and b.id = #{buildingId}
    </if>
    ORDER BY s.id desc limit #{page},#{size}
  </select>
  <select id="selectByProjectId" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM iot_region_storey
    WHERE project_id=#{projectId}
  </select>
  <select id="getByBuildingAndStorey" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM iot_region_storey
    WHERE id=#{storeyId} AND building_id=#{buildingId}
  </select>
  <select id="getByProjectAndBuildind" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM iot_region_storey
    WHERE project_id=#{projectId}
    <if test="buildingId != null">
        AND building_id=#{buildingId}
    </if>
  </select>

  <select id="getStoreyInfoList" resultType="com.steelman.iot.platform.entity.dto.EntityDto">
    SELECT st.id as id,CONCAT(IFNULL(ar.name,''),IF(ISNULL(ar.name),'','-'),bu.name,'-',st.name) as name, st.project_id as projectId
    FROM iot_region_storey st
    LEFT JOIN iot_region_area ar ON st.area_id=ar.id AND ar.project_id=#{projectId}
    INNER JOIN iot_region_building bu ON st.building_id=bu.id AND bu.project_id=#{projectId}
    WHERE st.project_id=#{projectId}
  </select>

  <select id="getByProjectId" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
    FROM iot_region_storey
    WHERE  project_id=#{projectId}
  </select>
</mapper>